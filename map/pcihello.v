//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module pcihello(

	//////////// CLOCK //////////
	CLOCK_50, 	
	CLOCK2_50, 	
	CLOCK3_50,

	//////////// LED (High Active) //////////
	LEDG,
	LEDR,

	//////////// KEY (Active Low) //////////
	KEY,

	// switches
   SW,
	
	//////////// SEG7 (Low Active) //////////
	HEX0,
	HEX1,
	HEX2,
	HEX3,
	HEX4,
	HEX5,
	HEX6,
	HEX7,

	//////////// PCIe //////////
	PCIE_PERST_N,
	PCIE_REFCLK_P,
	PCIE_RX_P,
	PCIE_TX_P,
	PCIE_WAKE_N,

	//////////// Fan Control //////////
	FAN_CTRL 
);

//=======================================================
//  PORT declarations
//=======================================================

input 		          		CLOCK_50;
input 		          		CLOCK2_50;
input 		          		CLOCK3_50;

output		     [8:0]		LEDG;
output		    [17:0]		LEDR;

input 		     [3:0]		KEY;
input            [17:0]	   SW;

output		     [6:0]		HEX0;
output		     [6:0]		HEX1;
output		     [6:0]		HEX2;
output		     [6:0]		HEX3;
output		     [6:0]		HEX4;
output		     [6:0]		HEX5;
output		     [6:0]		HEX6;
output		     [6:0]		HEX7;

input 		          		PCIE_PERST_N;
input 		          		PCIE_REFCLK_P;
input 		     [1:0]		PCIE_RX_P;
output		     [1:0]		PCIE_TX_P;
output		          		PCIE_WAKE_N;

inout 		          		FAN_CTRL;


//=======================================================
//  REG/WIRE declarations
//=======================================================

wire [31:0] hex_bus;
wire [31:0] hex_bus0;
wire [31:0] hex_bus1;
wire [31:0] hex_bus2;
wire [31:0] hex_bus3;
wire [31:0] hex_bus4;
wire [31:0] hex_bus5;
wire [31:0] hex_bus6;
wire [31:0] hex_bus7;
wire [31:0] hex_bus8;
wire [31:0] hex_bus9;

wire [31:0] sw_bus;
wire sw_bus0, sw_bus1, sw_bus2, sw_bus3, sw_bus4, sw_bus5, sw_bus6, sw_bus7, sw_bus8;
wire sw_bus9, sw_bus10, sw_bus11, sw_bus12, sw_bus13, sw_bus14, sw_bus15, sw_bus16, sw_bus17;

wire [31:0] push_bus;
wire push_bus0, push_bus1, push_bus2, push_bus3;

wire [31:0] red_bus;
wire red_bus0, red_bus1, red_bus2, red_bus3, red_bus4, red_bus5, red_bus6, red_bus7, red_bus8;
wire red_bus9, red_bus10, red_bus11, red_bus12, red_bus13, red_bus14, red_bus15, red_bus16, red_bus17;

wire [31:0] green_bus;
wire green_bus0, green_bus1, green_bus2, green_bus3, green_bus4, green_bus5, green_bus6, green_bus7;

wire [31:0] fan_bus;
wire fan_bus0;

wire [15:0] inbus;


//=======================================================
//  Structural coding
//=======================================================

    pcihellocore u0 (
        .pcie_hard_ip_0_rx_in_rx_datain_0          (PCIE_RX_P[0]),
        .pcie_hard_ip_0_tx_out_tx_dataout_0        (PCIE_TX_P[0]),
        .pcie_hard_ip_0_powerdown_pll_powerdown    (PCIE_WAKE_N),
        .pcie_hard_ip_0_powerdown_gxb_powerdown    (PCIE_WAKE_N),
        .pcie_hard_ip_0_refclk_export              (PCIE_REFCLK_P),
        .pcie_hard_ip_0_pcie_rstn_export           (PCIE_PERST_N),
        .hexport_external_connection_export        (hex_bus),
        .inport_external_connection_export         (inbus)
    );


//=======================================================
//  Assignments
//=======================================================

assign FAN_CTRL = 1'b1;

assign HEX0 = hex_bus[6:0];
assign HEX1 = hex_bus[13:7];
assign HEX2 = hex_bus[20:14];
assign HEX3 = hex_bus[27:21];

assign sw_bus[0] = sw_bus0;
assign sw_bus[1] = sw_bus1;
assign sw_bus[2] = sw_bus2;
assign sw_bus[3] = sw_bus3;
assign sw_bus[4] = sw_bus4;
assign sw_bus[5] = sw_bus5;
assign sw_bus[6] = sw_bus6;
assign sw_bus[7] = sw_bus7;
assign sw_bus[8] = sw_bus8;
assign sw_bus[9] = sw_bus9;
assign sw_bus[10] = sw_bus10;
assign sw_bus[11] = sw_bus11;
assign sw_bus[12] = sw_bus12;
assign sw_bus[13] = sw_bus13;
assign sw_bus[14] = sw_bus14;
assign sw_bus[15] = sw_bus15;
assign sw_bus[16] = sw_bus16;
assign sw_bus[17] = sw_bus17;

assign push_bus[0] = push_bus0;
assign push_bus[1] = push_bus1;
assign push_bus[2] = push_bus2;
assign push_bus[3] = push_bus3;

assign red_bus0  = red_bus[0];
assign red_bus1  = red_bus[1];
assign red_bus2  = red_bus[2];
assign red_bus3  = red_bus[3];
assign red_bus4  = red_bus[4];
assign red_bus5  = red_bus[5];
assign red_bus6  = red_bus[6];
assign red_bus7  = red_bus[7];
assign red_bus8  = red_bus[8];
assign red_bus9  = red_bus[9];
assign red_bus10 = red_bus[10];
assign red_bus11 = red_bus[11];
assign red_bus12 = red_bus[12];
assign red_bus13 = red_bus[13];
assign red_bus14 = red_bus[14];
assign red_bus15 = red_bus[15];
assign red_bus16 = red_bus[16];
assign red_bus17 = red_bus[17];

assign green_bus0 = green_bus[0];
assign green_bus1 = green_bus[1];
assign green_bus2 = green_bus[2];
assign green_bus3 = green_bus[3];
assign green_bus4 = green_bus[4];
assign green_bus5 = green_bus[5];
assign green_bus6 = green_bus[6];
assign green_bus7 = green_bus[7];

assign fan_bus0 = fan_bus[0];

assign inbus = SW[15:0];

endmodule
